// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: Authen;
$icon-font-path: '../fonts' !default;

@font-face {
  font-family: $icon-font-family;
  src: url('#{$icon-font-path}/Authen.eot?#iefix') format('eot');
}
@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAARAAAoAAAAABqgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAAA9AAAAD8AAABWPOJJiWNtYXAAAAE0AAAAOgAAAUriFRC2Z2x5ZgAAAXAAAADrAAABaGCfIwBoZWFkAAACXAAAACwAAAA2B4vR/WhoZWEAAAKIAAAAGAAAACQBzADhaG10eAAAAqAAAAAOAAAAEANwAABsb2NhAAACsAAAAAoAAAAKAPoAdm1heHAAAAK8AAAAHgAAACABEgA8bmFtZQAAAtwAAAEkAAAB/q79rf1wb3N0AAAEAAAAAD4AAABW3dTWCHicY2BkuMM4gYGVgYOhm2EWAwODHJTOZOBisGBgYGJgZWbACgLSXFMYHD4yfmRmuAPkCoNJBgZGEAEAttcJ6gB4nGNgYGBmgGAZBkYGEHAB8hjBfBYGDSDNBqQZGZgYGD4y//8PUvCREUTzM0DVAwEjG8OIBwBxaAa6AAB4nF3P/2qDMBAH8Lu2Jmo1MWpMcdq1zXC/YDKj5o+B9IU22IvsCfsw00EhawLf+yPHfS6whuVc5rsFDS2AZUj3qCa0b0gZnpp+NJ2ijT6RvDDdaPVglJZ6mOtgpPlqJ8Sp/csMq9eqKkQc+SETgoXJuu56FnEescu1ac5PWdcvdchJWqZRkCfzO+cAK2eX/c0mV7EfrZG6of/hPC3jeJtkbLOSLvR9PisWCCyQxgAbZ/4BHuDpxpAL8DiH1Gr5JtVUKm3NArtaacUh/RA7Gb17ybEP0PeFq/543u6Z0vuMkLuShPQI8AuADCz/AHicY2BkYGAA4ny5W4/j+W2+MnAz3AGKMFw+cXIJMg0UBYlzMDCBOABvzQyleJxjYGRgYLgDxMJgEsRmZEAFLABC0QKueJxjuMPAwICEAR8AA3EAAAAAAAAARgB2ALQAAHicY2BkYGBgYTAAYhBgAmIuIGRg+A/mMwAADcIBTwAAeJxdjj1Ow0AUhMf5Q8SAEEhIdFsgCpDsJGW6NEkfifROso4T2V5rvY6UlgNwAE7BAag5F2P7FYR90uib2dlnA7jFDzzUx8Og0fp0cEHXcpd0Ldwj3wv34eNReMB5Eh7iFS/CPttv3OD1LplcIRHu4AZOuMv8XbhH/hDu4wGfwgPmX8JDrPAt7OPZu5tVLtH5Uu+qNLKtaXWlbbk3uRoHozZY6FzbyOmtWp9UedxNnItVbE2m5iZ3Ok2NKqw56I0LEueKaRjGkgcbk2GGin+dQCPHkrqjTxHBnt385RXVosQehk5hjACjs8ai0boVMdPYsrXGiVriyC9MmDrE9DE7Bhlp3myr2ynHMCmauwOTDfOAu+tXBaYIOfG/fsAWN/0CqVxWDHicY2BigAAYjQ5YGBgYmRiZGVkEMpPz83TT8/PTc1J1C3JKi3nBAmmJyalJ+fnZXGBeZWJGfj4DAwBpMg+GAAA=) format('woff'),
       url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
          icon-google-plus: 'f101',
          icon-facebook: 'f102',
          icon-yahoo: 'f103',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vp-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vp-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
